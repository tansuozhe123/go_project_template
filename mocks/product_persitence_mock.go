// Code generated by MockGen. DO NOT EDIT.
// Source: go_project/internal/data/persistence (interfaces: ProductPersitenceInf)

// Package mocks is a generated GoMock package.
package mocks

import (
	entity "go_project/internal/biz/entity"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockProductPersitenceInf is a mock of ProductPersitenceInf interface.
type MockProductPersitenceInf struct {
	ctrl     *gomock.Controller
	recorder *MockProductPersitenceInfMockRecorder
}

// MockProductPersitenceInfMockRecorder is the mock recorder for MockProductPersitenceInf.
type MockProductPersitenceInfMockRecorder struct {
	mock *MockProductPersitenceInf
}

// NewMockProductPersitenceInf creates a new mock instance.
func NewMockProductPersitenceInf(ctrl *gomock.Controller) *MockProductPersitenceInf {
	mock := &MockProductPersitenceInf{ctrl: ctrl}
	mock.recorder = &MockProductPersitenceInfMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProductPersitenceInf) EXPECT() *MockProductPersitenceInfMockRecorder {
	return m.recorder
}

// GetOneProduct mocks base method.
func (m *MockProductPersitenceInf) GetOneProduct(arg0 string) (*entity.Product, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOneProduct", arg0)
	ret0, _ := ret[0].(*entity.Product)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOneProduct indicates an expected call of GetOneProduct.
func (mr *MockProductPersitenceInfMockRecorder) GetOneProduct(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOneProduct", reflect.TypeOf((*MockProductPersitenceInf)(nil).GetOneProduct), arg0)
}
